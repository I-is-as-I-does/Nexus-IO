{"version":3,"file":"js/NxIOEdit.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMyD;AAW1B;AAOsB;AACqB;AAM7C;AACoD;AAIxB;AAIE;AACP;AAKC;AAS5B;AAC+C;AACA;AACN;AAerC;AAC7B;AACA,mBAAmB,iEAAa;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ,wDAAO,aAAa;AACxC,YAAY,QAAQ,wDAAO,aAAa;AACxC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,sDAAK;AACX,QAAQ,wDAAO;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,cAAc,4DAAM;AACpB,mBAAmB,+DAAS;AAC5B;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA,GAAG;AACH;AACA,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA;AACA,sBAAsB,gEAAgB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,iEAAW;AACf;AACA,IAAI,iEAAW;AACf;AACA,IAAI,iEAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,yFAAW;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,wDAAM;AACtB;AACA;AACA;AACA,mBAAmB,yFAAY;AAC/B;AACA,mCAAmC,yDAAS;AAC5C;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,6FAAe;AACnB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB,eAAe;AACf;AACA,eAAe,+DAAa;AAC5B,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,qFAAO;AACf;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,UAAU,8FAAe;AACzB,UAAU;AACV;AACA;AACA;AACA,UAAU,qFAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB,mBAAmB,wDAAM;AACzB;AACA;AACA;AACA;AACA;AACA,IAAI,8FAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,oBAAoB,kDAAkD;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4DAAM;AACtB,iBAAiB,iEAAW;AAC5B;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,qEAAiB;AACnB;AACA;AACA;AACA;AACA,UAAU,oFAAM;AAChB,SAAS;AACT,QAAQ;AACR,QAAQ,qFAAO;AACf;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,kBAAkB,+DAAW;AAC7B,cAAc,kEAAY;AAC1B,EAAE,yEAAkB;AACpB;AACA;AACA;AACA,IAAI,kEAAa,CAAC,+DAAW;AAC7B,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,uDAAuD;AACpE,aAAa,gCAAgC;AAC7C,eAAe,kCAAkC;AACjD;AACA;AACA,oBAAoB,4DAAM;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,mEAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,mEAAY;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,OAAO;AACP,QAAQ,qFAAO;AACf;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,QAAQ,kEAAa;AACrB,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,qFAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AACla;AACvB,IAAI;AACJ,UAAU,2DAAS;AACnB,IAAI;AACJ,UAAU,2DAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,2DAAS;AACpB,aAAa,4DAAM;AACnB,cAAc,2DAAS;AACvB;AACA;AACA;AACA;AACA;AACA,oBAAoB,wFAAU;AAC9B;AACA;AACA;AACA,oBAAoB,wFAAU;AAC9B;AACA;AACA;AACA,oBAAoB,uFAAS;AAC7B;AACA;AACA,0BAA0B,sGAAwB;AAClD;AACA;AACA;AACA;AACA,mBAAmB,wFAAU;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA,gBAAgB,iGAAmB;AACnC;AACA,MAAM,oEAAc;AACpB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,2DAAW;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,8FAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wFAAU;AACzB;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,cAAc,2DAAU;AACxB;AACA,YAAY,yDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAM;AACrB;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,YAAY,4DAAM;AAClB,iBAAiB,+DAAS,CAAC,wDAAO;AAClC;AACA;AACA;AACA,MAAM,kGAAgB;AACtB;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB,kBAAkB,+DAAS,CAAC,yDAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,cAAc,4DAAM;AACpB,eAAe,+DAAS,CAAC,4DAAW;AACpC;AACA,+BAA+B;AAC/B;AACA,gBAAgB,6FAAS;AACzB;AACA;AACA;AACA;AACA,kCAAkC;AAClC,iBAAiB,4DAAM;AACvB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,YAAY,uDAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,sFAAO;AACjB;AACA,WAAW;AACX,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,4DAAM;AACrB,gBAAgB,+DAAS,CAAC,uDAAM;AAChC;AACA,cAAc,uDAAO;AACrB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB,aAAa,+DAAS,CAAC,wDAAO;AAC9B;AACA;AACA,GAAG;AACH,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA,IAAI,0FAAW;AACf;AACA,qBAAqB,4FAAc;AACnC;AACA,OAAO;AACP;AACA,QAAQ,kFAAM;AACd;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,YAAY,gGAAM;AAClB;AACA;AACA;AACA,EAAE,uFAAS;AACX;AACA,IAAI,wFAAS;AACb,GAAG;AACH;AACA;AACA;AACA,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAM;AAClB,EAAE,yEAAkB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,6FAAe;AACrB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB,YAAY,iEAAW;AACvB;AACA;AACA;AACA;AACA,WAAW,4DAAM;AACjB;AACA,YAAY,iEAAW;AACvB;AACA;AACA;AACA;AACA,cAAc,4DAAM;AACpB,cAAc,4DAAM;AACpB,gBAAgB,4DAAM;AACtB;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP,gBAAgB,4DAAM;AACtB,qBAAqB,+DAAS,CAAC,2DAAU;AACzC;AACA;AACA;AACA,IAAI,kEAAa;AACjB;AACA,mCAAmC,wDAAO;AAC1C,MAAM,+FAAgB;AACtB,MAAM;AACN,mCAAmC,2DAAU;AAC7C,MAAM,+FAAgB;AACtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,MAAM,wFAAQ;AACd,WAAW,uDAAO;AAClB;AACA,IAAI;AACJ;AACA;AACA;AACA,WAAW,mGAAiB;AAC5B;AACA;AACA;AACA,QAAQ;AACR,eAAe,uDAAO;AACtB;AACA,MAAM,kGAAgB;AACtB;AACA;AACA;AACA;AACA,iBAAiB,4FAAc;AAC/B;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wDAAQ;AACtB,EAAE,kEAAa;AACf;AACA;AACA;AACA;AACO;AACP,SAAS,+DAAS;AAClB;AACO;AACP,SAAS,+DAAS;AAClB;AACO;AACP,SAAS,+DAAS;AAClB;;;;;;;;;;;;;;;;;;;;;;;;;AC3oCA;AACkF;AACU;AACjC;AACT;AAClD;AACA,EAAS;AACT,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA,EAAS;AACT,cAAc,4DAAM;AACpB;AACA;AACA;AACA,EAAU;AACV,cAAc,4DAAM;AACpB;AACA;AACA;AACA;AACA;AACA,EAAS;AACT,aAAa,4DAAM;AACnB;AACA,gBAAgB,4DAAM;AACtB,wBAAwB,gGAAM;AAC9B,EAAE,0GAAiB;AACnB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,YAAY,4DAAM;AAClB;AACA;AACA;AACA;AACA;AACO;AACP,WAAW,4DAAM;AACjB,YAAY,+DAAS,CAAC,0DAAU;AAChC;AACA;AACA;;;;;;;;;;;;;;;;;;ACvDgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,SAAS,8FAAiB;AAC1B;AACA;AACA,EAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACrCA;AAC8F;AAC3C;AACuE;AAC1H;AACO;AACP;AACA,IAAI,wDAAY;AAChB;AACA,qBAAqB,+DAAU;AAC/B;AACA,mBAAmB,4DAAM;AACzB,oBAAoB,0DAAc;AAClC,oBAAoB,4DAAM;AAC1B,qBAAqB,0DAAc,GAAG,4DAAgB;AACtD;AACA,kBAAkB,kEAAY,CAAC,uEAAiB,IAAI,iEAAW;AAC/D,IAAI,uDAAW;AACf;AACA;AACA;AACA;AACA,iBAAiB,4DAAM;AACvB,4BAA4B,0DAAc;AAC1C;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC3BA;AACsF;AACZ;AAC1E;AACO;AACP;AACA,mBAAmB,yFAAY;AAC/B,gBAAgB,SAAS,oFAAM;AAC/B;AACA,iCAAiC,sFAAS;AAC1C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA","sources":["webpack://nexus-io/./src/editor/NxEdit.js","webpack://nexus-io/./src/editor/NxEditComps.js","webpack://nexus-io/./src/editor/NxEditPrc.js","webpack://nexus-io/./src/editor/NxEditor.js","webpack://nexus-io/./src/editor/NxStarters.js"],"sourcesContent":["import {\r\n  charMinMax,\r\n  idPattern,\r\n  itemsMinMax,\r\n  supportedMediaTypes,\r\n  urlPattern,\r\n} from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\"\r\nimport {\r\n  landmarkElm,\r\n  baseViewLink,\r\n  blockWrap,\r\n  getElm,\r\n  selectDropDown,\r\n  setHistoryControls,\r\n  setToggleOnDisplay,\r\n  toggleNavEnd,\r\n  iconImage,\r\n} from \"../shared/NxCommons.js\"\r\nimport {\r\n  easeIn,\r\n  easeOut,\r\n  insertDiversion,\r\n  replaceDiversion,\r\n  splitFlap,\r\n} from \"@i-is-as-i-does/valva/src/legacy/Valva-v1.js\"\r\nimport { randomString } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\"\r\nimport {\r\n  getAltState,\r\n  getBuffertime,\r\n  registerUpdateEvt,\r\n  triggerUpdate,\r\n} from \"../shared/NxState.js\"\r\nimport { getTxt } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\"\r\nimport {\r\n  getStoredEditData,\r\n  registerEditData,\r\n} from \"@i-is-as-i-does/nexus-core/src/storg/NxMemory.js\"\r\nimport {\r\n  isValidUrl,\r\n  validData,\r\n} from \"@i-is-as-i-does/nexus-core/src/validt/NxStamper.js\"\r\nimport { newData, newThread } from \"./NxStarters.js\"\r\nimport {\r\n  getSrcData,\r\n  getThreadsList,\r\n  loadSrcFile,\r\n} from \"@i-is-as-i-does/nexus-core/src/load/NxSrc.js\"\r\nimport {\r\n  dateInput,\r\n  baseLabel,\r\n  textareaInput,\r\n  textInput,\r\n  invalidSp,\r\n  deleteLinkBtn,\r\n  addBtn,\r\n} from \"./NxEditComps.js\"\r\nimport { convertToId, newState, resolveMediaType } from \"./NxEditPrc.js\"\r\nimport { getQuery } from \"@i-is-as-i-does/nexus-core/src/base/NxHost.js\"\r\nimport { logErr } from \"@i-is-as-i-does/nexus-core/src/logs/NxLog\"\r\nimport {\r\n  downB64,\r\n  downloadB64,\r\n  editB64,\r\n  invalidB64,\r\n  newB64,\r\n  openB64,\r\n  previewB64,\r\n  redoB64,\r\n  resetB64,\r\n  saveB64,\r\n  undoB64,\r\n  upB64,\r\n  validB64,\r\n} from \"../shared/NxIcons.js\"\r\n\r\nconst editBuffer = getBuffertime()\r\nconst editHistoryMax = 10\r\nvar hostElm\r\nvar editMenu\r\nvar editState = {\r\n  dataUrl: \"nexus-tmp\",\r\n  srcData: null,\r\n  threadId: \"/\",\r\n  threadIndex: -1,\r\n}\r\nvar originData = null\r\nvar previewOn = false\r\nvar upDownEvent = new CustomEvent(\"IndexChange\")\r\nvar changeEvent = new Event(\"change\")\r\nvar prcRunning = false\r\nvar actCtrls = {\r\n  ctrls: {\r\n    prev: { symbol: undoB64, elm: null },\r\n    next: { symbol: redoB64, elm: null },\r\n  },\r\n  position: 0,\r\n  count: 1,\r\n}\r\nvar lastAction = []\r\nvar editIndex = null\r\nvar editLocal = null\r\nvar editDistant = null\r\nvar authorForm\r\nvar btnSrc = {\r\n  up: upB64,\r\n  down: downB64,\r\n}\r\nvar saveBtn, resetBtn\r\nvar actionFdbck\r\nvar authorInputs = {\r\n  handle: null,\r\n  url: null,\r\n  about: null,\r\n}\r\nvar feedbackrun = null\r\nvar instanceBtn\r\nvar addThreadBtn\r\n\r\nfunction moveItem(from, to) {\r\n  editState.srcData.index.splice(\r\n    to,\r\n    0,\r\n    editState.srcData.index.splice(from, 1)[0]\r\n  )\r\n  editState.srcData.threads.splice(\r\n    to,\r\n    0,\r\n    editState.srcData.threads.splice(from, 1)[0]\r\n  )\r\n}\r\n\r\nfunction toggleActiveBtn(id, btn) {\r\n  var idx = editState.srcData.index.indexOf(id)\r\n\r\n  if (idx === 0) {\r\n    toggleBtn(btn[\"up\"], true)\r\n  } else {\r\n    toggleBtn(btn[\"up\"], false)\r\n  }\r\n  if (idx + 1 === editState.srcData.index.length) {\r\n    toggleBtn(btn[\"down\"], true)\r\n  } else {\r\n    toggleBtn(btn[\"down\"], false)\r\n  }\r\n}\r\nfunction permuteThread(goingUp, goingDown) {\r\n  editIndex.removeChild(goingUp)\r\n  editIndex.insertBefore(goingUp, goingDown)\r\n  goingDown.dispatchEvent(upDownEvent)\r\n  goingUp.dispatchEvent(upDownEvent)\r\n}\r\n\r\nfunction moveItemHandler(li, it, id) {\r\n  var act = function (redo) {\r\n    var idx = editState.srcData.index.indexOf(id)\r\n    var isUp = it == \"up\"\r\n    if (!redo) {\r\n      isUp = !isUp\r\n    }\r\n    if (isUp && idx != 0) {\r\n      moveItem(idx, idx - 1)\r\n      permuteThread(li, li.previousSibling)\r\n    } else if (!isUp && idx + 1 != editState.srcData.index.length) {\r\n      moveItem(idx, idx + 1)\r\n      permuteThread(li.nextSibling, li)\r\n    }\r\n  }\r\n\r\n  setLastAction(act)\r\n  act(true)\r\n}\r\nfunction setMoveBtns(li, id) {\r\n  var dv = getElm(\"DIV\", \"nx-edit-move\")\r\n  var btn = {\r\n    up: null,\r\n    down: null,\r\n  }\r\n  li.addEventListener(\"IndexChange\", function () {\r\n    toggleActiveBtn(id, btn)\r\n  })\r\n  Object.keys(btn).forEach((it) => {\r\n    btn[it] = getElm(\"A\", \"nx-edit-move-\" + it)\r\n    btn[it].append(iconImage(btnSrc[it], 16))\r\n    dv.append(btn[it])\r\n\r\n    btn[it].addEventListener(\"click\", function () {\r\n      moveItemHandler(li, it, id)\r\n    })\r\n  })\r\n  toggleActiveBtn(id, btn)\r\n  li.append(dv)\r\n}\r\n\r\nfunction threadLocalForm(idx, indexElm) {\r\n  var form = getElm(\"FORM\", \"nx-thread-local-form\")\r\n\r\n  var fieldset1 = getElm(\"FIELDSET\")\r\n  var idCallback = function (inp) {\r\n    indexElm.dataset.id = inp.value\r\n  }\r\n  var titleCallback = function (inp) {\r\n    var targ = indexElm.querySelector(\".nx-thread-title\")\r\n    if (targ.textContent !== inp.value) {\r\n      targ.textContent = inp.value\r\n    }\r\n  }\r\n  fieldset1.append(inputElm([\"threads\", idx, \"id\"], idCallback))\r\n  fieldset1.append(inputElm([\"threads\", idx, \"title\"], titleCallback))\r\n  fieldset1.append(inputElm([\"threads\", idx, \"description\"]))\r\n\r\n  var fieldset2 = getElm(\"FIELDSET\")\r\n  var fields = [\"timestamp\", \"main\", \"aside\"]\r\n  fields.forEach((field) => {\r\n    fieldset2.append(inputElm([\"threads\", idx, \"content\", field]))\r\n  })\r\n\r\n  var fieldset3 = getElm(\"FIELDSET\")\r\n\r\n  var typeInp = inputElm([\"threads\", idx, \"content\", \"media\", \"type\"])\r\n  var typeCallback = function (inp) {\r\n    var item = typeInp.querySelector(\r\n      \"[data-item=\" + resolveMediaType(inp.value) + \"]\"\r\n    )\r\n    if (item) {\r\n      item.click()\r\n    }\r\n  }\r\n  fieldset3.append(\r\n    inputElm([\"threads\", idx, \"content\", \"media\", \"url\"], typeCallback)\r\n  )\r\n  fieldset3.append(typeInp)\r\n  fieldset3.append(inputElm([\"threads\", idx, \"content\", \"media\", \"caption\"]))\r\n\r\n  form.append(\r\n    landmarkElm(\"local thread\"),\r\n    fieldset1,\r\n    landmarkElm(\"content\"),\r\n    fieldset2,\r\n    landmarkElm(\"media\", 2),\r\n    fieldset3\r\n  )\r\n  return form\r\n}\r\n\r\nfunction toggleAddBtn(btn, haystack, itemsKey){\r\n  var disabled = false\r\n  if(itemsMinMax[itemsKey][1] <= haystack.length){\r\n    disabled = true\r\n  } \r\n  if(btn.disabled !== disabled){\r\n    btn.disabled = disabled\r\n  }\r\n}\r\n\r\nfunction setAddThreadBtn() {\r\n  addThreadBtn= addBtn()\r\n  toggleAddBtn(addThreadBtn, editState.srcData.index, 'threads')\r\n  addThreadBtn.addEventListener(\"click\", function () {\r\n    if(!addThreadBtn.disabled){\r\n    var randomId = randomString(10)\r\n    var idx = editState.srcData.index.length\r\n    editState.srcData.threads.push(newThread(randomId))\r\n    editState.srcData.index.push(randomId)\r\n    var map = threadElms(idx, randomId)\r\n    var ks = [\"local\", \"distant\"]\r\n    ks.forEach((k) => {\r\n      map[k].parent.append(map[k].child)\r\n    })\r\n\r\n    var callb = null\r\n    if (editIndex.childNodes.length) {\r\n      callb = function () {\r\n        editIndex.childNodes[idx - 1].dispatchEvent(upDownEvent)\r\n      }\r\n    }\r\n    insertDiversion(map.index.parent, map.index.child, false, true, 200, callb)\r\n    toggleBtn(saveBtn, false)\r\n    toggleAddBtn(addThreadBtn, editState.srcData.index, 'threads')\r\n  }\r\n  })\r\n\r\n}\r\n\r\nfunction toggleBtn(btn, disabled = false) {\r\n  var hasDisbClass = btn.classList.contains(\"nx-disabled\")\r\n  if (!disabled && hasDisbClass) {\r\n    btn.classList.remove(\"nx-disabled\")\r\n  } else if (disabled && !hasDisbClass) {\r\n    btn.classList.add(\"nx-disabled\")\r\n  }\r\n}\r\n\r\nfunction linkInput(indexLi, addLinkBtn, form, idx, i) {\r\n  var linkwrap = getElm(\"DIV\", \"nx-edit-distant-link\")\r\n  var store = {linked: null}\r\n  var elm = inputElm([\"threads\", idx, \"linked\", i], null, store)\r\n  var dltBtn = deleteLinkBtn()\r\n  var delwrap = getElm(\"DIV\", \"nx-distant-link-action\")\r\n  delwrap.append(dltBtn)\r\n\r\n  dltBtn.addEventListener(\"click\", () => {\r\n    var act = function (redo) {\r\n     var nidx= editState.srcData.index.indexOf(indexLi.dataset.id)\r\n     var ni = editState.srcData.threads[nidx].linked.indexOf(store.linked.value)\r\n\r\n      if (redo) {\r\n        easeOut(linkwrap, 200, function () {\r\n          linkwrap.remove()\r\n        })\r\n        editState.srcData.threads[nidx].linked.splice(ni, 1)\r\n      } else {\r\n        if (\r\n          i === editState.srcData.threads[nidx].linked.length - 1\r\n        ) {\r\n          editState.srcData.threads[nidx].linked.push(store.linked.value)\r\n          insertDiversion(form, linkwrap, false, true, 200)\r\n        } else {\r\n          editState.srcData.threads[nidx].linked.splice(ni, 0, store.linked.value)\r\n          var nextSibling = form.childNodes[ni]\r\n          form.insertBefore(linkwrap, nextSibling)\r\n          easeIn(linkwrap, 200)\r\n        }\r\n      }\r\n      toggleAddBtn(addLinkBtn, editState.srcData.threads[nidx].linked, 'linked')\r\n    }\r\n    setLastAction(act)\r\n    act(true)\r\n  })\r\n  linkwrap.append(elm, delwrap)\r\n  return linkwrap\r\n}\r\n\r\nfunction threadDistantForm(idx, indexLi) {\r\n  var form = getElm(\"FORM\", \"nx-thread-distant-form\")\r\n  var addLinkBtn = addBtn()\r\n  toggleAddBtn(addLinkBtn, editState.srcData.threads[idx].linked, 'linked')\r\n  addLinkBtn.addEventListener(\"click\", () => {\r\n    if(!addLinkBtn.disabled){\r\n    var nidx = editState.srcData.index.indexOf(indexLi.dataset.id)\r\n    editState.srcData.threads[nidx].linked.push(\"\")\r\n    insertDiversion(\r\n      form,\r\n      linkInput(indexLi, addLinkBtn, form, nidx, editState.srcData.threads[nidx].linked.length - 1),\r\n      false,\r\n      true,\r\n      200\r\n    )\r\n    toggleAddBtn(addLinkBtn, editState.srcData.threads[nidx].linked, 'linked')\r\n  }\r\n  })\r\n\r\n  if (\r\n    !Object.prototype.hasOwnProperty.call(\r\n      editState.srcData.threads[idx],\r\n      \"linked\"\r\n    )\r\n  ) {\r\n    editState.srcData.threads[idx].linked = []\r\n  } else if (editState.srcData.threads[idx].linked.length) {\r\n    var elms = []\r\n    for (var i = 0; i < editState.srcData.threads[idx].linked.length; i++) {\r\n      var elm = linkInput(indexLi, addLinkBtn, form, idx, i)\r\n      elms.push(elm)\r\n    }\r\n    form.append(...elms)\r\n  }\r\n\r\n  var formCnt = getElm(\"DIV\")\r\n  formCnt.append(landmarkElm(\"linked threads\"), form, addLinkBtn)\r\n\r\n  return formCnt\r\n}\r\n\r\nfunction threadLi(id, form) {\r\n  var li = getElm(\"LI\")\r\n\r\n  li.append(form)\r\n\r\n  if (editState.threadId !== id) {\r\n    li.style.display = \"none\"\r\n  }\r\n  registerUpdateEvt(function (nState) {\r\n    if (nState.dataUrl == editState.dataUrl) {\r\n      editState = nState\r\n      if (nState.threadId == id) {\r\n        setTimeout(function () {\r\n          easeIn(li, 200)\r\n        }, 200)\r\n      } else {\r\n        easeOut(li, 200)\r\n      }\r\n    }\r\n  })\r\n  return li\r\n}\r\n\r\nfunction indexLink(idx, id) {\r\n  var itemState = getAltState(editState, id, idx)\r\n  var indLk = baseViewLink(itemState, false)\r\n  setToggleOnDisplay(indLk, itemState)\r\n\r\n  indLk.addEventListener(\"click\", () => {\r\n    var nidx = editState.srcData.index.indexOf(indLk.parentNode.dataset.id)\r\n    triggerUpdate(getAltState(editState, id, nidx), true)\r\n  })\r\n\r\n  return indLk\r\n}\r\n\r\nfunction threadElms(idx, id) {\r\n  var map = {\r\n    index: { parent: editIndex, child: null, link: null, del: null },\r\n    local: { parent: editLocal, child: null },\r\n    distant: { parent: editDistant, child: null },\r\n  }\r\n\r\n  map.index.child = getElm(\"LI\")\r\n  map.index.child.dataset.id = id\r\n\r\n  map.index.link = indexLink(idx, id)\r\n  map.index.child.append(map.index.link)\r\n  setMoveBtns(map.index.child, id)\r\n\r\n  map.distant.child = threadLi(id, threadDistantForm(idx, map.index.child))\r\n  map.local.child = threadLi(id, threadLocalForm(idx, map.index.child))\r\n\r\n  map.index.del = deleteThreadElm(\r\n    map.local.child,\r\n    map.distant.child,\r\n    map.index.child\r\n  )\r\n  map.index.child.append(map.index.del)\r\n\r\n  return map\r\n}\r\n\r\nfunction resetActions(){\r\n  lastAction = []\r\n  actCtrls.position = 0\r\n  actCtrls.count = 0\r\n  toggleNavEnd(actCtrls)\r\n\r\n}\r\n\r\nfunction setLastAction(callback) {\r\n  if (actCtrls.position != actCtrls.count - 1) {\r\n    lastAction.splice(actCtrls.position)\r\n    actCtrls.count = lastAction.length + 1\r\n  }\r\n  if (actCtrls.count === editHistoryMax) {\r\n    lastAction.splice(0, 1)\r\n  } else {\r\n    actCtrls.count++\r\n  }\r\n\r\n  lastAction.push(callback)\r\n  actCtrls.position = actCtrls.count - 1\r\n\r\n  toggleNavEnd(actCtrls)\r\n  toggleBtn(saveBtn, false)\r\n}\r\n\r\nfunction deleteEvent(localLi, distantLi, indexLi) {\r\n  var id = indexLi.dataset.id\r\n  var idx = editState.srcData.index.indexOf(id)\r\n  var len = editState.srcData.index.length\r\n  var map = {\r\n    index: id,\r\n    threads: Object.assign({}, editState.srcData.threads[idx]),\r\n  }\r\n\r\n  var act = function (redo) {\r\n    if (redo) {\r\n      Object.keys(map).forEach((field) => {\r\n        editState.srcData[field].splice(idx, 1)\r\n      })\r\n\r\n      if (len > 1) {\r\n        if (idx === 0) {\r\n          indexLi.nextSibling.dispatchEvent(upDownEvent)\r\n        } else if (idx === len - 1) {\r\n          indexLi.previousSibling.dispatchEvent(upDownEvent)\r\n        }\r\n      }\r\n\r\n      ;[distantLi, localLi, indexLi].forEach((elm) => {\r\n        easeOut(elm, 200, function () {\r\n          elm.remove()\r\n        })\r\n      })\r\n\r\n      if (editState.threadId === id) {\r\n        editState.threadId = \"/\"\r\n        editState.threadIndex = -1\r\n        triggerUpdate(editState, true, true)\r\n      } else if (editState.threadIndex > idx) {\r\n        editState.threadIndex--\r\n      }\r\n    } else {\r\n      Object.keys(map).forEach((field) => {\r\n        editState.srcData[field].splice(idx, 0, map[field])\r\n      })\r\n\r\n      if (idx < len - 1) {\r\n        var next = editIndex.childNodes[idx]\r\n        editIndex.insertBefore(indexLi, next)\r\n        if (idx === 0) {\r\n          next.dispatchEvent(upDownEvent)\r\n        }\r\n      } else {\r\n        editIndex.append(indexLi)\r\n        if (len > 1) {\r\n          indexLi.previousSibling.dispatchEvent(upDownEvent)\r\n        }\r\n      }\r\n\r\n      editLocal.append(localLi)\r\n      editDistant.append(distantLi)\r\n      easeIn(indexLi, 200)\r\n      indexLi.firstChild.click()\r\n    }\r\n    toggleAddBtn(addThreadBtn, editState.srcData.index, 'threads')\r\n  }\r\n  setLastAction(act)\r\n  act(true)\r\n}\r\n\r\nfunction deleteThreadElm(localLi, distantLi, indexLi) {\r\n  var btn = getElm(\"BUTTON\", \"nx-delete-thread\")\r\n  btn.type = \"button\"\r\n  btn.textContent = \"-\"\r\n\r\n  btn.addEventListener(\"click\", function () {\r\n    deleteEvent(localLi, distantLi, indexLi)\r\n  })\r\n  return btn\r\n}\r\n\r\nfunction setAuthorValue(ref, value) {\r\n  if (!editState.srcData.author) {\r\n    editState.srcData.author = {}\r\n  }\r\n  editState.srcData.author[ref[1]] = value\r\n  return\r\n}\r\n\r\nfunction setThreadIndex(ref) {\r\n  if (!editState.srcData.threads) {\r\n    editState.srcData.threads = []\r\n  } else if (typeof editState.srcData.threads[ref[1]] === \"undefined\") {\r\n    editState.srcData.threads[ref[1]] = {}\r\n  }\r\n}\r\n\r\nfunction setThreadId(ref, value) {\r\n  editState.srcData.index.splice(ref[1], 1, value)\r\n  editState.srcData.threads[ref[1]].id = value\r\n}\r\n\r\nfunction setThreadInfo(ref, value) {\r\n  editState.srcData.threads[ref[1]][ref[2]] = value\r\n}\r\n\r\nfunction setContentValue(ref, value) {\r\n  if (!editState.srcData.threads[ref[1]].content) {\r\n    editState.srcData.threads[ref[1]].content = {}\r\n  }\r\n  if (ref[3] !== \"media\") {\r\n    editState.srcData.threads[ref[1]].content[ref[3]] = value\r\n    return\r\n  }\r\n  if (!editState.srcData.threads[ref[1]].content.media) {\r\n    editState.srcData.threads[ref[1]].content.media = {}\r\n  }\r\n  editState.srcData.threads[ref[1]].content.media[ref[4]] = value\r\n  return\r\n}\r\n\r\nfunction setLinkedValue(ref, value) {\r\n  if (!editState.srcData.threads[ref[1]].linked) {\r\n    editState.srcData.threads[ref[1]].linked = []\r\n  } \r\n    editState.srcData.threads[ref[1]].linked[ref[3]] = value\r\n}\r\n\r\nfunction setNewValue(ref, value) {\r\n  if (editState.srcData === null) {\r\n    editState.srcData = {}\r\n    editState.srcData.index = []\r\n  }\r\n  if (ref[0] === \"author\") {\r\n    return setAuthorValue(ref, value)\r\n  }\r\n  setThreadIndex(ref)\r\n\r\n  if (ref[2] === \"id\") {\r\n    return setThreadId(ref, value)\r\n  }\r\n  if (![\"linked\", \"content\"].includes(ref[2])) {\r\n    return setThreadInfo(ref, value)\r\n  }\r\n\r\n  if (ref[2] === \"content\") {\r\n    return setContentValue(ref, value)\r\n  }\r\n  setLinkedValue(ref, value)\r\n}\r\n\r\nfunction fieldValue(ref) {\r\n  if (editState.srcData) {\r\n    if (ref[0] == \"author\") {\r\n      return editState.srcData[ref[0]][ref[1]]\r\n    }\r\n\r\n    if (![\"linked\", \"content\"].includes(ref[2])) {\r\n      return editState.srcData.threads[ref[1]][ref[2]]\r\n    }\r\n    if (ref[2] === \"content\") {\r\n      if (ref[3] !== \"media\") {\r\n        return editState.srcData.threads[ref[1]].content[ref[3]]\r\n      }\r\n      return editState.srcData.threads[ref[1]].content.media[ref[4]]\r\n    }\r\n    return editState.srcData.threads[ref[1]].linked[ref[3]]\r\n  }\r\n  return \"\"\r\n}\r\n\r\nfunction inputElm(ref, callback = null, store = null) {\r\n  var val = fieldValue(ref)\r\n\r\n  var pos = ref.length - 1\r\n  if (Number.isInteger(ref[pos])) {\r\n    pos--\r\n  }\r\n  var field = ref[pos]\r\n  pos--\r\n  if (Number.isInteger(ref[pos])) {\r\n    pos--\r\n  }\r\n  var parent = ref[pos]\r\n\r\n  var inp\r\n  if ([\"about\", \"description\", \"main\", \"aside\", \"caption\"].includes(field)) {\r\n    inp = textareaInput(val)\r\n  } else if (field == \"timestamp\") {\r\n    inp = dateInput(val)\r\n  } else {\r\n    inp = textInput(val)\r\n  }\r\n\r\n  var hook = ref.join(\"-\")\r\n  inp.id = hook\r\n  inp.name = hook\r\n  if (\r\n    [\r\n      \"handle\",\r\n      \"title\",\r\n      \"main\",\r\n      \"id\",\r\n      \"url\",\r\n      \"type\",\r\n      \"timestamp\",\r\n      \"linked\",\r\n    ].includes(field)\r\n  ) {\r\n    inp.required = true\r\n  }\r\n  var ident = field\r\n  if (field === \"linked\") {\r\n    ident = \"url\"\r\n  }\r\n\r\n  var lb = baseLabel(ident)\r\n  var indc = getElm(\"SPAN\", \"nx-edit-indication\")\r\n  var fdbck = invalidSp()\r\n  lb.append(indc, fdbck)\r\n\r\n  switch (field) {\r\n    case \"url\":\r\n      indc.textContent = \"[http]\"\r\n      inp.pattern = urlPattern\r\n      break\r\n    case \"linked\":\r\n      indc.textContent = \"[http]\"\r\n      inp.pattern = urlPattern\r\n      break\r\n    case \"id\":\r\n      indc.textContent = \"[A-Za-z0-9-][3-36]\"\r\n      inp.pattern = idPattern\r\n      break\r\n    case \"type\":\r\n      inp.pattern = \"(\" + supportedMediaTypes.join(\"|\") + \")\"\r\n      break\r\n    case \"timestamp\":\r\n      break\r\n    default:\r\n      var minmax = charMinMax[field]\r\n      indc.textContent = \"[\" + minmax[0] + \"-\" + minmax[1] + \"]\"\r\n      inp.setAttribute(\"maxlength\", minmax[1])\r\n      inp.setAttribute(\"minlength\", minmax[0])\r\n  }\r\n\r\n  if (store) {\r\n    store[field] = inp\r\n  }\r\n\r\n  var wrap = getElm(\"DIV\", \"nx-edit-input nx-edit-\" + parent + \"-\" + field)\r\n  wrap.append(lb)\r\n  if (field === \"type\") {\r\n    var items = supportedMediaTypes\r\n    wrap.append(\r\n      selectDropDown(items, inp, null, \"nx-edit-\" + ref[2] + \"-\" + field)\r\n    )\r\n  } else {\r\n    wrap.append(inp)\r\n  }\r\n\r\n  setInputEvt(ref, inp, fdbck, callback)\r\n  inputEvtHandler(ref, inp, fdbck, callback)\r\n\r\n  return wrap\r\n}\r\n\r\nfunction isUnique(haystack, needle, excludeIdx) {\r\n  if (haystack.indexOf(needle) !== -1) {\r\n    for (var c = 0; c < haystack.length; c++) {\r\n      if (c !== excludeIdx && haystack[c] === needle) {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nfunction uniqueId(id, idx) {\r\n  id = convertToId(id)\r\n  if (!isUnique(editState.srcData.index, id, idx)) {\r\n    var sp = id.split(\"-\")\r\n    var last = sp.pop()\r\n    var incr\r\n    if (!isNaN(last)) {\r\n      incr = parseInt(last)\r\n      incr++\r\n    } else {\r\n      sp.push(last)\r\n      incr = 1\r\n    }\r\n    id = sp.join(\"-\")\r\n    while (editState.srcData.index.includes(id + \"-\" + incr)) {\r\n      incr++\r\n    }\r\n    id += \"-\" + incr\r\n  }\r\n  return id\r\n}\r\n\r\nfunction inputEvtHandler(ref, inp, fdbck, callback) {\r\n  var success = function () {\r\n    setNewValue(ref, inp.value)\r\n    setFeedbackIcon(fdbck, true)\r\n    if (typeof callback === \"function\") {\r\n      callback(inp)\r\n    }\r\n  }\r\n\r\n  var failure = function () {\r\n    setFeedbackIcon(fdbck, false)\r\n  }\r\n\r\n  var valid = inp.checkValidity()\r\n\r\n  if ((valid && ref.includes(\"url\")) || ref.includes(\"linked\")) {\r\n    valid = isValidUrl(inp.value)\r\n    if (valid && ref.includes(\"linked\")) {\r\n      valid = isUnique(\r\n        editState.srcData.threads[ref[1]].linked,\r\n        inp.value,\r\n        ref[3]\r\n      )\r\n      if (valid) {\r\n        return getSrcData(inp.value)\r\n          .then(() => {\r\n            success()\r\n          })\r\n          .catch(() => {\r\n            failure()\r\n          })\r\n      }\r\n    }\r\n  } else if (ref.includes(\"id\")) {\r\n    var nId = uniqueId(inp.value, ref[1])\r\n    if (nId !== inp.value) {\r\n      inp.value = nId\r\n    }\r\n    valid = true\r\n  }\r\n\r\n  if (valid) {\r\n    success()\r\n  } else {\r\n    failure()\r\n  }\r\n}\r\n\r\nfunction setFeedbackIcon(fdbck, valid) {\r\n  var icsrc = invalidB64\r\n  if (valid) {\r\n    icsrc = validB64\r\n  }\r\n  fdbck.firstChild.src = icsrc\r\n}\r\n\r\nfunction setInputEvt(ref, inp, fdbck, callback) {\r\n  var undone = \"\"\r\n  var prev = inp.value\r\n  inp.addEventListener(\"focus\", function () {\r\n    prev = inp.value\r\n  })\r\n  inp.addEventListener(\"change\", function () {\r\n    inputEvtHandler(ref, inp, fdbck, callback)\r\n    var act = function (redo) {\r\n      if (redo) {\r\n        inp.value = undone\r\n      } else {\r\n        undone = inp.value\r\n        inp.value = prev\r\n      }\r\n      inputEvtHandler(ref, inp, fdbck, callback)\r\n    }\r\n    setLastAction(act)\r\n  })\r\n}\r\n\r\nfunction triggerUndoRedo(ctrl) {\r\n  if (!prcRunning) {\r\n    var postn = actCtrls.position\r\n    var redo = false\r\n    if (ctrl == \"next\") {\r\n      postn -= 1\r\n      redo = true\r\n    }\r\n\r\n    lastAction[postn](redo)\r\n    setTimeout(\r\n      function () {\r\n        prcRunning = false\r\n      }.bind(this),\r\n      editBuffer\r\n    )\r\n    toggleBtn(saveBtn, false)\r\n  }\r\n}\r\n\r\nfunction setAuthorForm() {\r\n  authorForm = getElm(\"FORM\", \"nx-edit-author\")\r\n  var fields = [\"handle\", \"url\", \"about\"]\r\n  fields.forEach((field) => {\r\n    authorForm.append(inputElm([\"author\", field], null, authorInputs))\r\n  })\r\n}\r\n\r\nfunction setSaveBtn() {\r\n  saveBtn = getElm(\"A\", \"nx-save\")\r\n  saveBtn.append(iconImage(saveB64, 20))\r\n  toggleBtn(saveBtn, true)\r\n  saveBtn.addEventListener(\"click\", function () {\r\n    if (!saveBtn.classList.contains(\"nx-disabled\")) {\r\n      registerEditData(editState.dataUrl, editState.srcData)\r\n      displayFeedback(\"saved\")\r\n      toggleBtn(saveBtn, true)\r\n      setResetStatus()\r\n    }\r\n  })\r\n}\r\n\r\nfunction setResetStatus() {\r\n  if (originData !== JSON.stringify(editState.srcData)) {\r\n    toggleBtn(resetBtn, false)\r\n  } else {\r\n    toggleBtn(resetBtn, true)\r\n  }\r\n}\r\n\r\nfunction setResetBtn() {\r\n  resetBtn = getElm(\"A\", \"nx-reset\")\r\n  resetBtn.append(iconImage(resetB64, 20))\r\n\r\n  setResetStatus()\r\n  resetBtn.addEventListener(\"click\", function () {\r\n    if (!resetBtn.classList.contains(\"nx-disabled\")) {\r\n      resetData(JSON.parse(originData))\r\n      toggleBtn(resetBtn, true)\r\n    }\r\n  })\r\n}\r\n\r\nfunction downloadBtn() {\r\n  var dlBtn = getElm(\"A\", \"nx-download\")\r\n  dlBtn.append(iconImage(downloadB64, 20))\r\n  dlBtn.addEventListener(\"click\", function (e) {\r\n    var data = Object.assign({}, editState.srcData)\r\n    delete data.index\r\n    var check = validData(data)\r\n    if (!check) {\r\n      displayFeedback(\"Invalid Nexus data\")\r\n    }\r\n    data = JSON.stringify(data, undefined, 2)\r\n    var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(data)\r\n    var anchor = getElm(\"A\")\r\n    anchor.setAttribute(\"href\", dataStr)\r\n    anchor.setAttribute(\"download\", \"nexus.json\")\r\n    hostElm.appendChild(anchor)\r\n    anchor.click()\r\n    anchor.remove()\r\n  })\r\n  return dlBtn\r\n}\r\n\r\nfunction resetAuthorForm() {\r\n  for (let [field, input] of Object.entries(authorInputs)) {\r\n    input.value = editState.srcData.author[field]\r\n    input.dispatchEvent(changeEvent)\r\n  }\r\n}\r\n\r\nfunction resetData(nData) {\r\n  var prevData = Object.assign({}, editState.srcData)\r\n\r\n  if (nData === null) {\r\n    nData = newData()\r\n  }\r\n  resetActions()\r\n\r\n  var act = function (redo) {\r\n    if (editState.srcData.threads.length) {\r\n      var parents = [editIndex, editLocal, editDistant]\r\n      parents.forEach((parent) => {\r\n        Array.from(parent.childNodes).forEach((child) => {\r\n          easeOut(child, 150, function () {\r\n            child.remove()\r\n          })\r\n        })\r\n      })\r\n    }\r\n\r\n    if (redo) {\r\n\r\n      editState.srcData = nData\r\n    } else {\r\n      editState.srcData = prevData\r\n    }\r\n\r\n    editState.threadIndex = 0\r\n    editState.threadId = editState.srcData.threads[0].id\r\n\r\n    triggerUpdate(editState, true)\r\n    resetAuthorForm()\r\n    setThreads(true)\r\n  }\r\n  act(true)\r\n  setLastAction(act)\r\n}\r\n\r\nfunction newDocumenBtn() {\r\n  var newBtn = getElm(\"A\", \"nx-new\")\r\n  newBtn.append(iconImage(newB64, 20))\r\n  newBtn.addEventListener(\"click\", function () {\r\n    resetData(newData())\r\n  })\r\n  return newBtn\r\n}\r\n\r\nfunction openBtn() {\r\n  var inp = fileInput()\r\n  var btn = getElm(\"A\", \"nx-open-file\")\r\n  btn.append(iconImage(openB64, 20))\r\n  btn.addEventListener(\"click\", function () {\r\n    inp.click()\r\n  })\r\n  var wrap = getElm(\"SPAN\")\r\n  wrap.append(inp, btn)\r\n  return wrap\r\n}\r\n\r\nfunction fileInput() {\r\n  var inp = getElm(\"INPUT\")\r\n  inp.type = \"file\"\r\n  inp.accept = \"application/json\"\r\n  inp.addEventListener(\"change\", function (evt) {\r\n    loadSrcFile(evt, true)\r\n      .then((data) => {\r\n        data.index = getThreadsList(data)\r\n        resetData(data)\r\n      })\r\n      .catch((err) => {\r\n        logErr(err.message)\r\n        displayFeedback(\"Invalid source\")\r\n      })\r\n    inp.value = \"\"\r\n  })\r\n  inp.style.display = \"none\"\r\n  return inp\r\n}\r\n\r\nfunction displayFeedback(msg) {\r\n  var txt = getTxt(msg)\r\n  if (feedbackrun) {\r\n    clearTimeout(feedbackrun)\r\n  }\r\n  splitFlap(actionFdbck, txt, 25)\r\n  feedbackrun = setTimeout(function () {\r\n    splitFlap(actionFdbck, \"\", 25)\r\n  }, 2000 + txt.length * 20)\r\n}\r\n\r\nfunction setActionFeedback() {\r\n  actionFdbck = getElm(\"SPAN\", \"nx-action-feedback\")\r\n}\r\n\r\nfunction editNav() {\r\n  var wrp = getElm(\"DIV\", \"nx-edit-nav\")\r\n  setActionFeedback()\r\n  setResetBtn()\r\n  setSaveBtn()\r\n\r\n  var links = getElm(\"DIV\")\r\n\r\n  links.append(resetBtn, newDocumenBtn(), openBtn(), saveBtn, downloadBtn())\r\n  wrp.append(actionFdbck, links)\r\n  return wrp\r\n}\r\nfunction editActions() {\r\n  var wrp = getElm(\"DIV\", \"nx-edit-actions nx-history-nav\")\r\n  setHistoryControls(actCtrls, triggerUndoRedo, true)\r\n  wrp.append(actCtrls.ctrls[\"prev\"].elm, actCtrls.ctrls[\"next\"].elm)\r\n  return wrp\r\n}\r\n\r\nfunction setThreads(ease = false) {\r\n  var items = editState.srcData.index\r\n\r\n  if (items.length) {\r\n    for (var i = 0; i < items.length; i++) {\r\n      setThread(i, items[i], ease)\r\n    }\r\n  }\r\n}\r\n\r\nfunction setThread(idx, id, ease = false) {\r\n  var map = threadElms(idx, id)\r\n  for (let [k, elmSet] of Object.entries(map)) {\r\n    if (ease && (k == \"index\" || id == editState.threadId)) {\r\n      insertDiversion(elmSet.parent, elmSet.child, false, true, 200)\r\n    } else {\r\n      elmSet.parent.append(elmSet.child)\r\n    }\r\n  }\r\n}\r\n\r\nfunction authorPart() {\r\n  setAuthorForm()\r\n  var dv = getElm(\"DIV\", \"nx-edit-author-form\")\r\n  dv.append(landmarkElm(\"author\"), authorForm)\r\n  return dv\r\n}\r\n\r\nfunction indexPart() {\r\n  var dv = getElm(\"DIV\", \"nx-edit-list\")\r\n  setAddThreadBtn()\r\n  dv.append(landmarkElm(\"threads\"), editIndex, addThreadBtn)\r\n  return dv\r\n}\r\n\r\nfunction setThreadsForms() {\r\n  editIndex = getElm(\"UL\", \"nx-edit-index\")\r\n  editLocal = getElm(\"UL\", \"nx-edit-local\")\r\n  editDistant = getElm(\"UL\", \"nx-edit-distant\")\r\n  setThreads()\r\n}\r\nfunction setEditMenu() {\r\n  editMenu = getElm(\"DIV\", \"nx-edit-menu\")\r\n  editMenu.append(editNav(), editActions())\r\n}\r\n\r\nexport function getEditMenu() {\r\n  return editMenu\r\n}\r\n\r\nexport function instanceSwitch(readerInst, editInst) {\r\n  instanceBtn = getElm(\"A\", \"nx-edit-switch\")\r\n  instanceBtn.append(iconImage(previewB64, 25))\r\n\r\n  instanceBtn.addEventListener(\"click\", function () {\r\n    previewOn = !previewOn\r\n    triggerUpdate(editState, true, true)\r\n    if (previewOn) {\r\n      instanceBtn.firstChild.src = editB64\r\n      replaceDiversion(editInst, readerInst)\r\n    } else {\r\n      instanceBtn.firstChild.src = previewB64\r\n      replaceDiversion(readerInst, editInst)\r\n    }\r\n  })\r\n\r\n  return instanceBtn\r\n}\r\n\r\nexport function setEditState(state, nxelm) {\r\n  hostElm = nxelm\r\n  var url = \"nexus-tmp\"\r\n  var data\r\n\r\n  if (getQuery(\"new\")) {\r\n    data = newData()\r\n    state = null\r\n  } else {\r\n    if (state.dataUrl) {\r\n      url = state.dataUrl\r\n    }\r\n    data = getStoredEditData(url)\r\n    if (data === null) {\r\n      if (state.srcData !== null) {\r\n        data = state.srcData\r\n      } else {\r\n        data = newData()\r\n      }\r\n      registerEditData(url, data)\r\n    }\r\n  }\r\n\r\n  if (!data.index) {\r\n    data.index = getThreadsList(data)\r\n  }\r\n\r\n  if (state !== null && state.srcData !== null) {\r\n    originData = JSON.stringify(state.srcData)\r\n  } else {\r\n    originData = JSON.stringify(data)\r\n  }\r\n\r\n  var id = data.threads[0].id\r\n  var idx = 0\r\n\r\n  if (state && state.threadId !== \"/\" && data.index.includes(state.threadId)) {\r\n    id = state.threadId\r\n    idx = data.index.indexOf(state.threadId)\r\n  }\r\n\r\n  editState = newState(data, url, id, idx)\r\n  triggerUpdate(editState, true)\r\n  setEditMenu()\r\n  setThreadsForms()\r\n}\r\n\r\nexport function editIndexBlock() {\r\n  return blockWrap(\"index\", [authorPart(), indexPart()], false)\r\n}\r\nexport function editLocalBlock() {\r\n  return blockWrap(\"local\", [editLocal], false)\r\n}\r\nexport function editDistantBlock() {\r\n  return blockWrap(\"distant\", [editDistant], false)\r\n}\r\n","\r\nimport { getTxt } from \"@i-is-as-i-does/nexus-core/src/transl/NxCoreTranslate.js\";\r\nimport { registerTranslElm } from \"@i-is-as-i-does/nexus-core/src/transl/NxElmTranslate.js\";\r\nimport { getElm, iconImage } from \"../shared/NxCommons.js\";\r\nimport { invalidB64 } from \"../shared/NxIcons.js\";\r\n\r\n  export function textInput(val) {\r\n    var inp = getElm(\"INPUT\", \"nx-edit-text\");\r\n    inp.type = \"text\";\r\n    inp.value = val;\r\n    return inp;\r\n  }\r\n  \r\n  export function textareaInput(val) {\r\n    var inp = getElm(\"TEXTAREA\", \"nx-edit-textarea\");\r\n    inp.textContent = val;\r\n    return inp;\r\n  }\r\n  export  function dateInput(val) {\r\n    var inp = getElm(\"INPUT\");\r\n    inp.type = \"datetime-local\";\r\n    inp.value = val;\r\n    return inp;\r\n  }\r\n  \r\n  export function baseLabel(field) {\r\n    var lb = getElm(\"LABEL\", \"nx-edit-label\");\r\n    lb.for = field;\r\n    var title = getElm(\"SPAN\", \"nx-edit-title\");\r\n    title.textContent = getTxt(field);\r\n  registerTranslElm(title, field);\r\n    lb.append(title);\r\n    return lb;\r\n  }\r\n\r\n  \r\nexport function deleteLinkBtn() {\r\n  var btn = getElm(\"BUTTON\", \"nx-delete-link\");\r\n  btn.type = \"button\";\r\n  btn.textContent = \"-\";\r\n  return btn;\r\n}\r\n\r\nexport function addBtn() {\r\n  var btn = getElm(\"BUTTON\", \"nx-add-link\");\r\n  btn.type = \"button\";\r\n  btn.textContent = \"+\";\r\n  return btn;\r\n}\r\n\r\nexport function invalidSp() {\r\n  var sp = getElm(\"SPAN\", \"nx-edit-feedback\");\r\n  sp.append(iconImage(invalidB64))\r\n  return sp;\r\n}\r\n\r\n","import { replaceDiacritics } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\n\r\nconst providers = [\"youtube\", \"vimeo\", \"soundcloud\"];\r\nconst guessMap = {\r\n  image: [\"jpg\", \"jpeg\", \"gif\", \"svg\", \"png\", \"webp\"],\r\n  video: [\"mp4\", \"webm\"],\r\n  audio: [\"mp3\"],\r\n};\r\n\r\nexport function resolveMediaType(val) {\r\n  for (var p = 0; p < providers.length; p++) {\r\n    if (val.includes(providers[p])) {\r\n      return providers[p];\r\n    }\r\n  }\r\n  var ext = val.split(\".\").pop();\r\n  for (let [type, exts] of Object.entries(guessMap)) {\r\n    if (exts.includes(ext)) {\r\n      return type;\r\n    }\r\n  }\r\n\r\n  return \"page\";\r\n}\r\n\r\nexport function convertToId(title) {\r\n  return replaceDiacritics(title).trim().replace(/[^A-Za-z0-9]+/g, \"-\").replace(/(^-|-$)+/g, '')\r\n  }\r\n\r\n  export function newState(data, url = \"nexus-tmp\", id = \"/\", idx = -1){\r\n    return {\r\n      dataUrl: url,\r\n      srcData: data,\r\n      threadId: id,\r\n      threadIndex: idx,\r\n    };\r\n  }\r\n  ","\r\nimport { appHeaderWithLang, getElm, instanceWrap, serviceWrap } from \"../shared/NxCommons.js\";\r\nimport { readerElms } from \"../reader/NxReader.js\";\r\nimport { editDistantBlock, editIndexBlock, editLocalBlock, getEditMenu, setEditState, instanceSwitch } from \"./NxEdit.js\";\r\n\r\nexport function editorElms(seed){\r\n\r\n    setEditState(seed.state, seed.nxelm);\r\n\r\n    var readerInst = readerElms(seed);\r\n  \r\n   var indexPart = getElm(\"DIV\");\r\n   indexPart.append(editIndexBlock());\r\n   var threadPart = getElm(\"DIV\");\r\n   threadPart.append(editLocalBlock(),editDistantBlock());\r\n   \r\n   var editInst = instanceWrap(appHeaderWithLang(),[serviceWrap\r\n  ([getEditMenu()], [\r\n    indexPart,\r\n    threadPart\r\n    ], [], \"edit\")]);\r\n\r\n    var editor = getElm('DIV','nx-editor')\r\n    editor.append(editInst, instanceSwitch(readerInst, editInst))\r\n    \r\n    return editor\r\n  }\r\n  ","\r\nimport { randomInt, randomString } from \"@i-is-as-i-does/jack-js/src/modules/Help.js\";\r\nimport { appUrl } from \"@i-is-as-i-does/nexus-core/src/validt/NxSpecs.js\";\r\n\r\nexport function newData() {\r\n\r\n    var randomId = randomString(10);\r\n       return { \"nexus\": appUrl,\r\n        \"author\": {\r\n          \"handle\": \"Anonymous-\"+randomInt(100,999),\r\n          \"about\": \"\",\r\n          \"url\": \"http://\"\r\n        },\r\n        \"threads\": [\r\n            newThread(randomId)\r\n        ],\r\n        \"index\":[randomId]\r\n};\r\n}\r\n\r\nexport function newThread(randomId){\r\n    return {\r\n      \"id\": randomId,\r\n      \"title\": randomId,\r\n      \"description\": \"...\",\r\n      \"content\": {\r\n        \"timestamp\": new Date().toISOString().substring(0,16),\r\n        \"main\": \"...\",\r\n        \"aside\": \"\",\r\n        \"media\": {\r\n          \"url\": \"\",\r\n          \"type\": \"\",\r\n          \"caption\": \"\"\r\n        }\r\n      },\r\n      \"linked\": [\r\n      ]\r\n    };\r\n  }\r\n  "],"names":[],"sourceRoot":""}